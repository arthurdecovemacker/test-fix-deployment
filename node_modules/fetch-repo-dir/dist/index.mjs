import t from"fs-extra";import r from"tmp";import o from"path";import n from"https";import e from"tar";const a=new Set(["github","gitlab","bitbucket"]);r.setGracefulCleanup();export default async function(i,c={}){Array.isArray(i)||(i=[i]),c=Object.assign({replace:!1,onDownloadStart:()=>{},onDownloadEnd:()=>{},onUnpackStart:()=>{},onUnpackEnd:()=>{},onCopyStart:()=>{},onCopyEnd:()=>{}},c);const s=r.dirSync({unsafeCleanup:!0}),p=s.name,d=async(r,i)=>{const s=function(t){const r=/^(?:https:\/\/([^\/]+)\/)?([^\/\s]+)\/([^\/\s#]+)(\/[^\s#]+)?(?:#(.+))?/.exec(t);if(!r)throw new Error("could not parse "+t);const o=(r[1]||"github").replace(/\.(com|org)$/,"");if(!a.has(o))throw new Error("Supported GitHub, GitLab and BitBucket only");const n=r[2],e=r[3],i=(r[4]||"").replace(/^\//,""),c=r[5]||"master",s=`https://${o}.${"bitbucket"===o?"org":"com"}/${n}/${e}`;return{site:o,user:n,name:e,ref:c,path:i,url:s,gz:"gitlab"===o?`${s}/repository/archive.tar.gz?ref=${c}`:"bitbucket"===o?`${s}/get/${c}.tar.gz`:`${s}/archive/${c}.tar.gz`}}(r),d=`${s.site}_${s.user}_${s.name}_${s.ref}`.replace(/[^a-z0-9_]/gi,"_"),u=o.join(p,d+".tar.gz"),l=o.join(p,d),f=o.join(l,s.path.split("/").join(o.sep)),h=o.resolve(i);if(!t.existsSync(l)){t.mkdirSync(l);try{c.onDownloadStart(s.gz,u),await function r(o,e){return new Promise((a,i)=>{n.get(o,o=>{const n=o.statusCode;n>=400?i({code:n,message:o.statusMessage}):n>=300?r(o.headers.location,e).then(a,i):o.pipe(t.createWriteStream(e)).on("finish",()=>a()).on("error",i)}).on("error",i)})}(s.gz,u),c.onDownloadEnd(s.gz,u)}catch(t){throw new Error(`unsuccessful download of ${s.gz};${t}`)}}try{c.onUnpackStart(u,l),await async function(t,r){return e.extract({file:t,strip:1,C:r})}(u,l),c.onUnpackEnd(u,l)}catch(t){throw new Error("can't unpack "+u)}if(!c.replace&&t.existsSync(h)&&t.readdirSync(h).length>0)throw new Error("destination directory is not empty");t.mkdirpSync(h),c.onCopyStart(f,h),t.copySync(f,h),c.onCopyEnd(f,h)};for(let t=0;t<i.length;t++){const r=i[t];if(!r.src||!r.dir)throw new Error("invalid source and/or distonation provided");await d(r.src,r.dir)}s.removeCallback()}
